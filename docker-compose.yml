version: '3.7'

services:
  db:
    image: mysql:5.7
    container_name: hackathon_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hack_db
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - '8080:80'
    depends_on:
      - db
    networks:
      - my_network

  # SonarQube Database (PostgreSQL)
  sonarqube_db:
    image: postgres:13-alpine
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - my_network

  # SonarQube Service
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube_db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - '9000:9000'  # SonarQube UI
    depends_on:
      - sonarqube_db
    networks:
      - my_network

  # Prometheus Service
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"  # Prometheus UI
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the Prometheus config
    networks:
      - my_network

  # Grafana Service
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"  # Expose Grafana on port 3001
    depends_on:
      - prometheus
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  sonarqube_db_data:
    driver: local